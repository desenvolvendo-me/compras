<div class="tabs">
  <ul>
    <li>
      <a href="#main">Principal</a>
    </li>

    <li>
      <a href="#documents">Documentos</a>
    </li>

    <li>
      <a href="#budget_allocations">Dotações orçamentárias</a>
    </li>

    <li>
      <a href="#calculation_configuration">Configuração da apuração</a>
    </li>
  </ul>

  <div id="main">
    <%= render 'main', :f => f %>
  </div>

  <div id="documents">
    <%= render 'documents', :f => f %>
  </div>

  <div id="budget_allocations">
    <%= render 'budget_allocations', :f => f %>
  </div>

  <div id="calculation_configuration">
    <%= render 'calculation_configuration', :f => f %>
  </div>
</div>

<script>
  $(function () {
    var objectType = $(".object-type-select").val();

    if (objectType) {
      filterModalities(objectType);
    } else {
      disableModalities();
    }

    $('form.licitation_process').on('change', '.object-type-select', function() {
      $('#licitation_process_modality').html('');

      var objectType = $(this).val();
      if (objectType) {
        filterModalities(objectType);
        enableModalities();
      } else {
        disableModalities();
      }
    });

    $('#licitation_process_modality').on('change', function() {
      filterJudgmentForm();
    });

    function filterModalities(objectType) {
      var modalitiesByObjectType = <%= Modality.by_object_type.to_json.html_safe %>,
          validGroup = _(modalitiesByObjectType[objectType]),
          currentModality = "<%= f.object.modality %>";

      $("#licitation_process_modality").append(function() {
        return $("<option>").text('').val('');
      });

      if (!validGroup.isUndefined() && !validGroup.isEmpty()){
        validGroup.each(function(modality) {
          $("#licitation_process_modality").append(function() {
            if (modality[1] == "<%= f.object.modality %>") {
              return $("<option>").text(modality[0]).val(modality[1]).attr('selected', 'selected');
            } else {
              return $("<option>").text(modality[0]).val(modality[1]);
            }
          });
        });
      }
    }

    function filterJudgmentForm() {
      var licitationKindGroups = <%= JudgmentFormLicitationKindByObjectType.new.licitation_kind_groups.to_json.html_safe %>,
          options = _(<%= f.object.decorator.judgment_forms_available.to_json.html_safe %>),
          value = $("#licitation_process_object_type").val(),
          validGroups = _(licitationKindGroups[value]);

      if (!validGroups.isUndefined()) {
        $("#licitation_process_judgment_form_id").html("");

        $("#licitation_process_judgment_form_id").append(function () {
          return $("<option>").text('').val('');
        });

        options.each(function(judgmentForm) {
          validGroups.each(function(validLicitationKind) {
            if (judgmentForm.licitation_kind == validLicitationKind) {
              $("#licitation_process_judgment_form_id").append(function() {
                return $("<option>").text(judgmentForm.description).
                                     val(judgmentForm.id).
                                     data('kind', judgmentForm.kind);
              });
            }
          });
        });

        <% if f.object.judgment_form %>
          $("#licitation_process_judgment_form_id option").filter('[value="<%= f.object.judgment_form_id %>"]').attr("selected", "selected");
        <% end %>
      }
    }

    function disableModalities() {
      $('#licitation_process_modality').attr("disabled", "disabled");
    }

    function enableModalities() {
      $('#licitation_process_modality').removeAttr("disabled");
    }

    filterJudgmentForm();
  });

  (function () {
    var purchaseSolicitationItemGroupId = $("#licitation_process_purchase_solicitation_item_group_id").val(),
        purchaseSolicitationId = $("#licitation_process_purchase_solicitation_id").val();

    if (purchaseSolicitationItemGroupId) {
      disablePurchaseSolicitation();
      disableBudgetAllocations();
    } else if (purchaseSolicitationId) {
      disablePurchaseSolicitationItemGroup();
      disableBudgetAllocations();
    }
  })();

  function disableBudgetAllocations() {
    $("#budget-allocations :input").attr("disabled", true);
    $("#budget-allocations :input[type='button']").hide();
  }


  function enableBudgetAllocations() {
    $("#budget_allocations :input").attr("disabled", false);
    $("#budget_allocations :input[type='button']").show();
  }

  function disablePurchaseSolicitation() {
    $("#licitation_process_purchase_solicitation").attr("disabled", "disabled");
  }

  function disablePurchaseSolicitationItemGroup() {
    $("#licitation_process_purchase_solicitation_item_group").attr("disabled", "disabled");
  }

  function enablePurchaseSolicitation() {
    $("#licitation_process_purchase_solicitation").removeAttr("disabled");
  }

  function enablePurchaseSolicitationItemGroup() {
    $("#licitation_process_purchase_solicitation_item_group").removeAttr("disabled");
  }

  function fillResponsible(responsible) {
    var oldResponsible = $('#licitation_process_responsible_id').val();

    if (responsible && oldResponsible == "") {
      $('#licitation_process_responsible').val(responsible.to_s);
      $('#licitation_process_responsible_id').val(responsible.id);
    }
  }

  function fillBudgetAllocation(uuid, budget_allocation) {
    var prefixNameUuid = "#licitation_process_administrative_process_budget_allocations_attributes_fresh-" + uuid;

    $(prefixNameUuid + "_budget_allocation").val(budget_allocation.description);
    $(prefixNameUuid + "_budget_allocation_id").val(budget_allocation.budget_allocation_id);
    $(prefixNameUuid + "_budget_allocation_amount").val(numberWithDelimiter(budget_allocation.amount));
    $(prefixNameUuid + "_value").val(numberWithDelimiter(budget_allocation.total_items_value));
  }

  function renderBudgetAllocation(budget_allocation) {
    var budgetAllocationBinds = [];
    var budgetAllocationUUID = _.uniqueId();

    budgetAllocationBinds["uuid-administrative-process-budget-allocation"] = "fresh-" + budgetAllocationUUID;

    $("#administrative-process-budget-allocation").append(
      $("#administrative-process-budget-allocation-template").mustache(budgetAllocationBinds)
    ).trigger("nestedForm:afterAdd");

    fillBudgetAllocation(budgetAllocationUUID, budget_allocation);
  }

  $("#licitation_process_purchase_solicitation_item_group_id").on("change", function (event, purchase_solicitation_item_group) {
    $("#administrative_process_budget_allocations").empty();

    if (purchase_solicitation_item_group) {
      $.each(purchase_solicitation_item_group.purchase_solicitations, function (i, purchase_solicitation) {
        $.each(purchase_solicitation.budget_allocations, function (i, budget_allocation) {
          renderBudgetAllocation(budget_allocation);
        });
      });

      disableBudgetAllocations();
      disablePurchaseSolicitation();
    } else {
      enableBudgetAllocations();
      enablePurchaseSolicitation();
    }
  });

  $("#licitation_process_purchase_solicitation_id").on("change", function (event, purchase_solicitation) {
    $("#administrative_process_budget_allocations").empty();

    if (purchase_solicitation) {
      $.each(purchase_solicitation.budget_allocations, function (i, budget_allocation) {
        renderBudgetAllocation(budget_allocation);
      });

      disableBudgetAllocations();
      disablePurchaseSolicitationItemGroup();
      fillResponsible(purchase_solicitation.responsible);
    } else {
      enableBudgetAllocations();
      enablePurchaseSolicitationItemGroup();
    }
  });

  $('form.licitation_process').on('change', '.material', function (event, material) {
    if (material){
      $(this).closest('.item').find('.reference-unit').val(material.reference_unit);
    }
  });

  function calcItemOrder() {
    $('.administrative_process_budget_allocation').each(function (index, item) {
      $(this).find('.item .hidden .destroy[value=false]').each(function (index, item) {
        $(this).closest('.administrative_process_budget_allocation .item').find('.order').val(index + 1);
      });
    });
  }

  function calculateTotalOfItems(administrativeProcessBudgetAllocation) {
    var itemPrices = administrativeProcessBudgetAllocation.find('.item-price:visible'),
        totalValue = 0;

    itemPrices.each(function () {
      totalValue += parsePtBrFloat(this.value);
    });

    administrativeProcessBudgetAllocation.find('.total-value').val(numberWithDelimiter(totalValue));
  }

  $('form.licitation_process').on('click', '.remove-item', function () {
    calcItemOrder();
    calculateTotalOfItems($(this).closest('.administrative_process_budget_allocation'));
  });

  $('form.licitation_process').on('nestedForm:afterAdd', function (){
    calcItemOrder();
  });

  calcItemOrder();

  $('form.licitation_process').on('keyup', '.item-quantity, .item-unit-price', function() {
    var itemDiv = $(this).closest('.item'),
        itemQuantity = new BigNumber(parsePtBrFloat(itemDiv.find('.item-quantity').val() || '0')),
        itemUnitPrice = new BigNumber(parsePtBrFloat(itemDiv.find('.item-unit-price').val() || '0')),
        total = numberWithDelimiter(parseFloat(itemQuantity.multiply(itemUnitPrice)));

    itemDiv.find('.item-price').val(total);
    calculateTotalOfItems(itemDiv.closest('.administrative_process_budget_allocation'));
  });

  $('form.licitation_process').on('keyup', '.item-price', function () {
    var itemDiv = $(this).closest('.item'),
        itemQuantity = new BigNumber(parsePtBrFloat(itemDiv.find('.item-quantity').val() || '0')),
        itemPrice = new BigNumber(parsePtBrFloat(itemDiv.find('.item-price').val() || '0')),
        unitPrice = numberWithDelimiter(0);

    if (itemQuantity != '0') {
      unitPrice = itemPrice.divide(itemQuantity);
      unitPrice = numberWithDelimiter(parseFloat(unitPrice));
    }

    itemDiv.find('.item-unit-price').val(unitPrice);
    calculateTotalOfItems(itemDiv.closest('.administrative_process_budget_allocation'));
  });

  function filterTypesOfCalculation (judgmentKind) {
    var modality = $("#licitation_process_modality").val(),
        objectType = $("#licitation_process_object_type").val(),
        typesOfCalculationGroupsForJudgmentFormKind = <%= LicitationProcessTypesOfCalculationByJudgmentFormKind.new.types_of_calculation_groups.to_json.html_safe %>,
        typesOfCalculationGroupsForObjectType   = <%= LicitationProcessTypesOfCalculationByObjectType.new.types_of_calculation_groups.to_json.html_safe %>,
        typesOfCalculationGroupsForModality     = <%= LicitationProcessTypesOfCalculationByModality.new.types_of_calculation_groups.to_json.html_safe %>,
        typesOfCalculationOptions               = _(<%= LicitationProcessTypeOfCalculation.to_a.to_json.html_safe %>),
        options                                 = typesOfCalculationGroupsForJudgmentFormKind[judgmentKind] || [],
        optionsForObjectType                    = _(typesOfCalculationGroupsForObjectType[objectType] || []),
        optionsForModality                      = _(typesOfCalculationGroupsForModality[modality] || []);

    if (!optionsForObjectType.include(options[1])) {
      delete options[1];
    }

    if (!optionsForModality.include(options[2])) {
      delete options[2];
    }

    if (_.size(options) == 0) {
      $("#licitation_process_type_of_calculation").empty().closest("div.input").hide();
      return;
    }

    $("#licitation_process_type_of_calculation").html("<option></option>").closest("div.input").show();

    typesOfCalculationOptions.each(function (option) {
      if (modality == 'auction') {
        if (optionsForModality.include(option[1])) {
          $("#licitation_process_type_of_calculation").append(function () {
            return $("<option>").text(option[0]).val(option[1]);
          });
        }
      } else {
        if (_(options).include(option[1])) {
          $("#licitation_process_type_of_calculation").append(function () {
            return $("<option>").text(option[0]).val(option[1]);
          });
        }
      }
    });
  }

  $("#licitation_process_judgment_form_id").on('change', function(event, judgmentForm) {
    var option = $('#licitation_process_judgment_form_id option[value="'+ $(this).val() + '"]');

    if (option) {
      filterTypesOfCalculation(option.data('kind'));
    }
  });

  $("#licitation_process_type_of_calculation").val("<%= f.object.type_of_calculation %>");

  <% unless resource.updatable? %>
    $(function(){
      $('form.licitation_process [data-disabled]').on('click', function(event){
        event.stopImmediatePropagation();
        return false;
      });
      $('form.licitation_process :input').not('[data-disabled]').attr('disabled', true);
    });
  <% end %>

  <% if resource.decorator.disable_budget_allocations? %>
    $("#budget_allocations :input").attr("disabled", "disabled");
    $("#budget_allocations :input[type='button']").hide();
  <% end %>
</script>
