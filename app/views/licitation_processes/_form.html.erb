<div class="tabs">
  <ul>
    <li><a href="#general">Dados gerais</a></li>
    <li><a href="#documents">Documentos</a></li>
    <li><a href="#budget_allocations">Dotações orçamentárias</a></li>
    <li><a href="#publications-tab">Publicações</a></li>
    <li><a href="#invited-bidders">Licitantes convidados</a></li>
  </ul>

  <div id="general">
    <%= render 'general', :f => f %>
  </div>

  <div id="documents">
    <%= render 'documents', :f => f %>
  </div>

  <div id="budget_allocations">
    <%= render 'budget_allocations', :f => f %>
  </div>

  <div id="publications-tab">
    <%= render 'publications', :f => f %>
  </div>

  <div id="invited-bidders">
    <div id="message-invited-bidders-not-needed">
      <%= t 'other.tributario.messages.msg_no_invited_bidders' %>
    </div>

    <%= render 'invited_bidders', :f => f %>
  </div>
</div>

<script>
  $('.tabs').tabs({
    create: function () {
      var tabWithError = $('.ui-tabs-panel:has(.error)', this).attr('id');

      if (tabWithError) {
        $(this).tabs('select', tabWithError);
      }
    }
  });

  function toggleInvitedBiddersTab(modality) {
    if (modality == '<%= AdministrativeProcessModality::INVITATION_FOR_CONSTRUCTIONS_ENGINEERING_SERVICES %>' ||
        modality == '<%= AdministrativeProcessModality::INVITATION_FOR_PURCHASES_AND_ENGINEERING_SERVICES %>') {
      $('#invited-bidders-content').show();
      $('#message-invited-bidders-not-needed').hide();
    } else {
      $('#invited-bidders-content').hide();
      $('#message-invited-bidders-not-needed').show();
    }
  }

  toggleInvitedBiddersTab('<%= f.object.administrative_process_modality %>');

  function abreviatedProcessModality(modality) {
    var abreviations = <%= AbreviatedProcessModality.to_a.to_json.html_safe %>,
        index;

    for (index in abreviations) {
      if (abreviations[index][1] == modality) {
        return abreviations[index][0];
      }
    }
  }

  function cleanExistingAdministrativeProcessBudgetAllocations() {
    $(".licitation-process-budget-allocation").remove()
  }

  function createAdministrativeProcessBudgetAllocations(budgetAllocations) {
    cleanExistingAdministrativeProcessBudgetAllocations();

    var template = $('#administrative-process-budget-allocations-template'),
        target = $('#budget-allocations');

    $(budgetAllocations).each(function() {
      target.append(template.mustache({id: this.id,
                                       description: this.description,
                                       administrative_process_id: this.administrative_process_id,
                                       budget_allocation_id: this.budget_allocation_id,
                                       uuid_administrative_process_budget_allocation: _.uniqueId('fresh-'),
                                       value: floatToPtBrString(this.value),
                                       expenseNature: this.expense_nature,
                                       amount: floatToPtBrString(this.amount)}));
    });
  }

  $("#licitation_process_administrative_process_id").change(function (event, data) {
    if (data) {
      var record = data.record;

      $('#licitation_process_administrative_process_budget_unit').val(record.data("budget-unit"));
      $('#licitation_process_administrative_process_modality_humanize').val(record.data("modality-humanize"));
      $('#licitation_process_administrative_process_object_type_humanize').val(record.data("object-type"));
      $('#licitation_process_administrative_process_judgment_form').val(record.data("judgment-form"));
      $('#licitation_process_administrative_process_description').val(record.data("description"));
      $('#licitation_process_administrative_process_responsible').val(record.data("responsible"));
      $('#licitation_process_administrative_process_item').val(record.data("item"));
      $('#licitation_process_modality').val(abreviatedProcessModality(record.data("modality")));
      $("#licitation_process_administrative_process_attributes_id").val(record.data("id"));

      toggleInvitedBiddersTab(record.data("modality"));
      createAdministrativeProcessBudgetAllocations(record.data("budget-allocations"));
    } else {
      $('#licitation_process_administrative_process_budget_unit').val('');
      $('#licitation_process_administrative_process_modality_humanize').val('');
      $('#licitation_process_administrative_process_object_type_humanize').val('');
      $('#licitation_process_administrative_process_judgment_form').val('');
      $('#licitation_process_administrative_process_description').val('');
      $('#licitation_process_administrative_process_responsible').val('');
      $('#licitation_process_administrative_process_item').val('');
      $('#licitation_process_modality').val('');

      cleanExistingAdministrativeProcessBudgetAllocations();
    }
  });

  $('form.licitation_process').delegate('.material', 'change', function (event, data) {
    if (data){
      var record = data.record;

      $(this).closest('.item').find('.reference-unit').val(record.data("reference-unit"));
    }
  });

  function calcItemOrder() {
    $('fieldset.licitation-process-budget-allocation').each(function(index, item){
      $(this).find('.item .hidden .destroy[value=false]').each(function(index, item){
        $(this).parent().parent().find('.order').val(index + 1);
      });
    });
  }

  $('form.licitation_process').delegate('.remove-licitation-process-budget-allocation, .remove-item', 'click', function() {
    calcItemOrder();
  });

  $('form.licitation_process').bind('append.mustache', function(){
    calcItemOrder();
  });

  calcItemOrder();

  $('form.licitation_process').delegate('.item-quantity, .item-unit-price', 'keyup', function() {
    var itemDiv = $(this).closest('.item'),
        itemQuantity = parsePtBrFloat(itemDiv.find('.item-quantity').val() || '0'),
        itemUnitPrice = parsePtBrFloat(itemDiv.find('.item-unit-price').val() || '0'),
        total = floatToPtBrString(itemQuantity * itemUnitPrice);

    itemDiv.find('.item-price').val(total);
  });

  $('form.licitation_process').delegate('.item-price', 'keyup', function() {
    var itemDiv = $(this).closest('.item'),
        itemQuantity = parsePtBrFloat(itemDiv.find('.item-quantity').val() || '0'),
        itemPrice = parsePtBrFloat(itemDiv.find('.item-price').val() || '0'),
        unitPrice = floatToPtBrString(itemPrice / itemQuantity);

    itemDiv.find('.item-unit-price').val(unitPrice);
  });

  function toggleBidderDates() {
    $('.auto-convocation').each(function(){
      var bidderDiv = $(this).closest('.licitation-process-invited-bidder');

      if($(this).is(':checked')) {
        bidderDiv.find('.protocol-date').attr('disabled', true);
        bidderDiv.find('.receipt-date').attr('disabled', true);
      } else {
        bidderDiv.find('.protocol-date').attr('disabled', false);
        bidderDiv.find('.receipt-date').attr('disabled', false);
      }
    });
  }

  $('form.licitation_process').delegate('.auto-convocation', 'click', function() {
    toggleBidderDates();
  });

  toggleBidderDates();

  $('#invited_bidders').bind('append.mustache', function() {
    var lastBidder = $(this).find('.licitation-process-invited-bidder:last'),
        target = lastBidder.find('.document-fields');

    $('.document-type').each(function(index, docRecord) {
      var docId = $(docRecord).find('.document-id').val(),
          docDescription = $(docRecord).find('.document-desc').val(),
          mustache = lastBidder.find('[type="text/x-mustache"]').mustache({docId: docId,
                                                                           docDescription: docDescription,
                                                                           uuid_licitation_process_invited_bidder_document: 'fresh-' + index});

      target.append(mustache);
    });
  });

  $('.licitation_process_document_types_records').bind('append.mustache', function() {
    var docRecord = $('.document-type:last'),
        docId = docRecord.find('.document-id').val(),
        docDescription = docRecord.find('.document-desc').val();

    $('.licitation-process-invited-bidder').each(function() {
      var mustache = $(this).find('[type="text/x-mustache"]').mustache({docId: docId,
                                                                        docDescription: docDescription,
                                                                        uuid_licitation_process_invited_bidder_document: 'fresh-' + docId});

      $(this).find('.document-fields').append(mustache);
    });
  });

  $('form.licitation_process').delegate(".modal-finder-remove", "click", function () {
    var docId = $(this).closest("tr").find('.document-id').val(),
        input = $('input.bidder-document-type-id[value="' + docId + '"]');

    input.closest('.bidder-document').hide().find('input.hidden.destroy').val('true');
  });

  function checkBidderDocumentsForExclusion() {
    var docIds = $(".document-type").map(function () {
      return $(this).find('.document-id').val();
    });

    $('input.bidder-document-type-id').each(function() {
      if ( $.inArray($(this).val(), docIds) == -1 ) {
        $(this).closest('.bidder-document').hide().find('input.hidden.destroy').val('true');
      };
    });
  }

  checkBidderDocumentsForExclusion();
</script>
