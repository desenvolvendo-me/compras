<div class="tabs">
  <ul>
    <li><a href="#general">Dados gerais</a></li>
    <li><a href="#documents">Documentos</a></li>
    <li><a href="#budget_allocations">Dotações orçamentárias</a></li>
    <li><a href="#publications-tab">Publicações</a></li>
    <li><a href="#invited-bidders">Licitantes convidados</a></li>
  </ul>

  <div id="general">
    <%= render 'general', :f => f %>
  </div>

  <div id="documents">
    <%= render 'documents', :f => f %>
  </div>

  <div id="budget_allocations">
    <%= render 'budget_allocations', :f => f %>
  </div>

  <div id="publications-tab">
    <%= render 'publications', :f => f %>
  </div>

  <div id="invited-bidders">
    <%= render 'msg_no_invited_bidders' %>
    <%= render 'invited_bidders', :f => f %>
  </div>
</div>

<script>
  $('.tabs').tabs({
    create: function () {
      var tabWithError = $('.ui-tabs-panel:has(.error)', this).attr('id');

      if (tabWithError) {
        $(this).tabs('select', tabWithError);
      }
    }
  });

  function toggleInvitedBiddersTab(modality) {
    if (modality == '<%= AdministrativeProcessModality::INVITATION_FOR_CONSTRUCTIONS_ENGINEERING_SERVICES %>' ||
        modality == '<%= AdministrativeProcessModality::INVITATION_FOR_PURCHASES_AND_ENGINEERING_SERVICES %>') {
      $('#invited_bidders').show();
      $('#msg-no-invited-bidders').hide();
    } else {
      $('#invited_bidders').hide();
      $('#msg-no-invited-bidders').show();
    }
  }

  toggleInvitedBiddersTab('<%= f.object.modality %>');

  function abreviatedProcessModality(modality) {
    var abreviations = <%= AbreviatedProcessModality.to_a.to_json.html_safe %>,
        index;

    for (index in abreviations) {
      if (abreviations[index][1] == modality) {
        return abreviations[index][0];
      }
    }
  }

  $("#licitation_process_administrative_process_id").change(function (event, data) {
    if (data) {
      var record = data.record;

      $('#licitation_process_administrative_process_organogram').val(record.data("organogram"));
      $('#licitation_process_administrative_process_modality_humanize').val(record.data("modality-humanize"));
      $('#licitation_process_administrative_process_object_type_humanize').val(record.data("object-type"));
      $('#licitation_process_administrative_process_judgment_form').val(record.data("judgment-form"));
      $('#licitation_process_administrative_process_description').val(record.data("description"));
      $('#licitation_process_administrative_process_responsible').val(record.data("responsible"));
      $('#licitation_process_administrative_process_item').val(record.data("item"));
      $('#licitation_process_modality').val(abreviatedProcessModality(record.data("modality")));
      toggleInvitedBiddersTab(record.data("modality"));

    } else {
      $('#licitation_process_administrative_process_organogram').val('');
      $('#licitation_process_administrative_process_modality_humanize').val('');
      $('#licitation_process_administrative_process_object_type_humanize').val('');
      $('#licitation_process_administrative_process_judgment_form').val('');
      $('#licitation_process_administrative_process_description').val('');
      $('#licitation_process_administrative_process_responsible').val('');
      $('#licitation_process_administrative_process_item').val('');
      $('#licitation_process_modality').val('');
    }
  });

  $('form.licitation_process').delegate('.budget-allocation', 'change', function (event, data) {
    if (data){
      var record = data.record;

      $(this).closest('fieldset').find('.classification').val(record.data("expense_economic_classification"));
      $(this).closest('fieldset').find('.amount').val(record.data("amount"));
    }
  });

  $('form.licitation_process').delegate('.material', 'change', function (event, data) {
    if (data){
      var record = data.record;

      $(this).closest('.item').find('.reference-unit').val(record.data("reference-unit"));
    }
  });

  function calcItemOrder() {
    $('fieldset.licitation-process-budget-allocation').each(function(index, item){
      $(this).find('.item .hidden .destroy[value=false]').each(function(index, item){
        $(this).parent().parent().find('.order').val(index + 1);
      });
    });
  }

  $('form.licitation_process').delegate('.remove-licitation-process-budget-allocation, .remove-item', 'click', function() {
    calcItemOrder();
  });

  $('form.licitation_process').bind('append.mustache', function(){
    calcItemOrder();
  });

  calcItemOrder();

  $('form.licitation_process').delegate('.item-quantity, .item-unit-price', 'keyup', function() {
    var itemDiv = $(this).closest('.item'),
        itemQuantity = parsePtBrFloat(itemDiv.find('.item-quantity').val() || '0'),
        itemUnitPrice = parsePtBrFloat(itemDiv.find('.item-unit-price').val() || '0'),
        total = floatToPtBrString(itemQuantity * itemUnitPrice);

    itemDiv.find('.item-price').val(total);
  });

  $('form.licitation_process').delegate('.item-price', 'keyup', function() {
    var itemDiv = $(this).closest('.item'),
        itemQuantity = parsePtBrFloat(itemDiv.find('.item-quantity').val() || '0'),
        itemPrice = parsePtBrFloat(itemDiv.find('.item-price').val() || '0'),
        unitPrice = floatToPtBrString(itemPrice / itemQuantity);

    itemDiv.find('.item-unit-price').val(unitPrice);
  });

  function toggleBidderDates() {
    $('.auto-convocation').each(function(){
      var bidderDiv = $(this).closest('.licitation-process-invited-bidder');

      if($(this).is(':checked')) {
        bidderDiv.find('.protocol-date').attr('disabled', true);
        bidderDiv.find('.receipt-date').attr('disabled', true);
        } else {
        bidderDiv.find('.protocol-date').attr('disabled', false);
        bidderDiv.find('.receipt-date').attr('disabled', false);
      }
    });
  }

  $('form.licitation_process').delegate('.auto-convocation', 'click', function() {
    toggleBidderDates();
  });

  toggleBidderDates();
</script>
