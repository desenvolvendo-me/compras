<%= f.input :active %>

<%= f.input :autocomplete_materials_class, :as => :auto_complete,
            :source_path => materials_classes_path(:without_children => true),
            :hidden_field => :materials_class_id, :max_results => 20, :min_length => 1 %>


<%= f.input :description %>

<%= f.input :detailed_description %>

<div class="yui3-g">
  <div class="yui3-u-1-2">
    <%= f.input :reference_unit %>
  </div>

  <div class="yui3-u-1-2">
    <%= f.input :manufacturer %>
  </div>
</div>

<div class="yui3-g">
  <div class="yui3-u-1-2">
    <%= f.input :material_type %>
  </div>

  <div class="yui3-u-1-2">
    <%= f.input :combustible %>
  </div>
</div>

<div class="yui3-g control-amount">
  <div class="yui3-u-1-2">
    <%= f.input :control_amount %>
  </div>
</div>

<div class="yui3-g">
  <div class="yui3-u-1-2">
    <%= f.input :expense_nature %>
  </div>

  <div class="yui3-u-1-2">
    <%= f.input :contract_type, :disabled => !f.object.service? %>
  </div>
</div>

<script>
  $("#material_material_type").change(function() {
    changeFieldsByMaterialType();
    setControlAmount();
  });

  function changeFieldsByMaterialType() {
    typeValue = $("#material_material_type").val();

    if (typeValue == "<%= MaterialType::CONSUMPTION %>" || typeValue == "<%= MaterialType::ASSET %>") {
      $("#material_service_or_contract_type").attr('disabled', true)
                                             .requiredField(false);
    } else if (typeValue == "<%= MaterialType::SERVICE %>") {
      $("#material_contract_type").attr('disabled', false).requiredField(true);
    }
  };

  function setControlAmount() {
    var controlAmount = $('.control-amount'),
        materialType = $("#material_material_type").val();

    if (typeValue == "<%= MaterialType::SERVICE %>") {
      controlAmount.show();
    } else {
      controlAmount.find(':input').removeAttr('checked');
      controlAmount.hide();
    }
  }

  (function(){
    changeFieldsByMaterialType();
    setControlAmount();
  })();
</script>
