<%= f.input :pledge, :modal_url => modal_pledges_path(:has_subpledges => true) %>
<%= f.input :provider, :disabled => true %>

<div class="yui3-g">
  <div class="yui3-u-1-2">
    <%= f.input :emission_date, :disabled => true, :input_html => { :value => f.object.decorator.emission_date } %>
  </div>

  <div class="yui3-u-1-2">
    <%= f.input :pledge_value, :disabled => true, :input_html => { :value => f.object.decorator.pledge_value } %>
  </div>
</div>

<div class="yui3-g">
  <div class="yui3-u-1-2">
    <%= f.input :subpledge %>
  </div>

  <div class="yui3-u-1-2">
    <%= f.input :subpledge_balance, :disabled => true, :input_html => { :value => f.object.decorator.subpledge_balance } %>
  </div>
</div>

<%= render 'subpledge_expirations', :f => f %>

<%= f.input :value %>
<%= f.input :date %>
<%= f.input :reason %>

<%= mustache 'subpledge_expiration_template' do %>
  <tr id="subpledge_expiration_{{number}}">
    <td>
      {{number}}
    </td>
    <td>
      {{expiration_date}}
    </td>
    <td class="value">
      {{value}}
    </td>
    <td class="canceled_value">
      {{canceled_value}}
    </td>
    <td class="balance">
      {{balance}}
    </td>
  </tr>
<% end %>

<script>
  <% if f.object.persisted? %>
    $('form.subpledge_cancellation :input').attr('disabled', true);
  <% else %>
    function subpledgeUrl() {
      var url = "<%= modal_subpledges_path %>?",
          params = {
            locked_fields: ["pledge"],
            subpledge: {
              pledge_id: $('#subpledge_cancellation_pledge_id').val(),
              pledge: $('#subpledge_cancellation_pledge').val()
            }
          };

      url += jQuery.param(params);

      return url;
    }

    function clearExistingSubpledgeExpirations() {
      $('#expirations tbody').html('');
    }

    function createSubpledgeExpirationsFromSubpledge(subpledgeExpirations) {
      var template = $('#subpledge_expiration_template'),
        rendered = '';

      $(subpledgeExpirations).each(function() {

        rendered += template.mustache({
          expiration_date: this.expiration_date,
          value: this.value,
          number: this.number,
          canceled_value: this.canceled_value,
          balance: this.balance
        });
      });

      $('#subpledge_expirations tbody').html(rendered);
    }

    $('#subpledge_cancellation_pledge_id').change(function (event, pledge) {
      if (pledge) {
        $('#subpledge_cancellation_provider').val(pledge.provider);
        $('#subpledge_cancellation_emission_date').val(pledge.emission_date);
        $('#subpledge_cancellation_pledge_value').val(pledge.pledge_value);
        $('#subpledge_cancellation_subpledge').attr('data-modal-url', subpledgeUrl());
      } else {
        $('#subpledge_cancellation_provider').val('');
        $('#subpledge_cancellation_emission_date').val('');
        $('#subpledge_cancellation_pledge_value').val('');
        $('#subpledge_cancellation_subpledge').val('');
        $('#subpledge_cancellation_subpledge_id').val('');
        $('#subpledge_cancellation_subpledge').attr('data-modal-url', '<%= modal_subpledges_path %>');
        $('#subpledge_cancellation_subpledge_balance').val('');
      }
    });

    $('#subpledge_cancellation_subpledge_id').change(function (event, subpledge) {
      clearExistingSubpledgeExpirations();

      if (subpledge) {
        $('#subpledge_cancellation_subpledge_balance').val(subpledge.balance);

        if (!$('#subpledge_cancellation_pledge_id').val()) {
          $('#subpledge_cancellation_provider').val(subpledge.pledge_provider);
          $('#subpledge_cancellation_emission_date').val(subpledge.emission_date);
          $('#subpledge_cancellation_pledge_value').val(subpledge.pledge_value);
          $('#subpledge_cancellation_pledge').val(subpledge.pledge);
          $('#subpledge_cancellation_pledge_id').val(subpledge.pledge_id);
        }
       $('#subpledge_value').html(subpledge.subpledge_value);
       $('#subpledge_cancellations_sum').html(subpledge.subpledge_cancellations_sum);
       $('#subpledge_balance').html(subpledge.balance_as_currency);
        createSubpledgeExpirationsFromSubpledge(subpledge.expirations);
      } else {
        $('#subpledge_cancellation_subpledge_balance').val('');
      }
    });
  <% end %>
</script>
