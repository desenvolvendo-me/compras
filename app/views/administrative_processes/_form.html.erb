<div class="tabs">
  <ul>
    <li>
      <a href="#main">Principal</a>
    </li>

    <li>
      <a href="#budget-allocations">Dotações orçamentarias</a>
    </li>
  </ul>

  <div id="main">
    <%= render 'main', :f => f %>
  </div>

  <div id="budget-allocations">
    <%= render 'budget_allocations', :f => f %>
  </div>
</div>

<script>
  $(function () {
    var objectType = $(".object-type-select").val();

    if (objectType) {
      filterModalities(objectType);
    } else {
      disableModalities();
    }

    $('form.administrative_process').on('change', '.object-type-select', function() {
      $('.modal-modality').val('');

      var objectType = $(this).val();
      if (objectType) {
        filterModalities(objectType);
        enableModalities();
      } else {
        disableModalities();
      }
    });
  });

  function filterModalities(objectType) {
    var params = {
      by_object_type: objectType,
      locked_fields: ["object_type"]
    };

    var url = "<%= modal_licitation_modalities_path %>?" + $.param(params);

    $('.modal-modality').data('modal-url', url);
  }

  function disableModalities() {
    $('.modal-modality').attr("disabled", "disabled");
  }

  function enableModalities() {
    $('.modal-modality').removeAttr("disabled");
  }

  (function () {
    var purchaseSolicitationItemGroupId = $("#administrative_process_purchase_solicitation_item_group_id").val();

    if (purchaseSolicitationItemGroupId) {
      disableBudgetAllocations();
    }
  })();

  $("#administrative_process_purchase_solicitation_item_group_id").on("change", function (event, purchase_solicitation_item_group) {
    $("#administrative-process-budget-allocation").empty();

    if (purchase_solicitation_item_group) {
      $.each(purchase_solicitation_item_group.purchase_solicitations, function (i, purchase_solicitation) {
        $.each(purchase_solicitation.budget_allocations, function (i, budget_allocation) {
          renderBudgetAllocation(budget_allocation);
        });
      });

      disableBudgetAllocations();
    } else {
      enableBudgetAllocations();
    }

    calculateAllocationsTotalValue();
  });

  function renderBudgetAllocation(budget_allocation) {
    var budgetAllocationBinds = [];
    var budgetAllocationUUID = _.uniqueId();

    budgetAllocationBinds["uuid-administrative-process-budget-allocation"] = "fresh-" + budgetAllocationUUID;

    $("#administrative-process-budget-allocation").append(
      $("#administrative-process-budget-allocation-template").mustache(budgetAllocationBinds)
      ).trigger("nestedForm:afterAdd");

    fillBudgetAllocation(budgetAllocationUUID, budget_allocation);
  }

  function fillBudgetAllocation(uuid, budget_allocation) {
    var prefixNameUuid = "#administrative_process_administrative_process_budget_allocations_attributes_fresh-" + uuid;

    $(prefixNameUuid + "_budget_allocation").val(budget_allocation.description);
    $(prefixNameUuid + "_budget_allocation_id").val(budget_allocation.budget_allocation_id);
    $(prefixNameUuid + "_budget_allocation_amount").val(numberWithDelimiter(budget_allocation.amount));
  }

  function disableBudgetAllocations() {
    $("#budget-allocations .modal").attr("disabled", "disabled");
    $("#budget-allocations .add-administrative-process-budget-allocation").hide();
    $("#budget-allocations .remove-administrative-process-budget-allocation").hide();
  }


  function enableBudgetAllocations() {
    $("#budget-allocations .add-administrative-process-budget-allocation").attr("disabled", false);
    $("#budget-allocations .add-administrative-process-budget-allocation").show();
  }

  <% if f.object.persisted? && !f.object.waiting? %>
    $('form.administrative_process :input').attr('disabled', true);
    $('form.administrative_process .add-administrative-process-budget-allocation').hide();
    $('form.administrative_process .remove-administrative-process-budget-allocation').hide();
  <% end %>

  function calculateAllocationsTotalValue() {
    var total = 0,
        value;

    $.each($('.allocation-value:visible'), function() {
      value = $(this).attr('value');
      if (value) {
        total += parsePtBrFloat(value);
      }
    });
    $('#administrative_process_total_allocations_value').val(numberWithDelimiter(total));
  }

  $('form.administrative_process').on('keyup', '.allocation-value', function() {
    calculateAllocationsTotalValue();
  });

  $('form.administrative_process').on('click', '.remove-administrative-process-budget-allocation', function() {
    calculateAllocationsTotalValue();
  });

  $('form.administrative_process').on('change', '.budget-allocation', function (event, budget_allocation) {
    if (budget_allocation){
      $(this).closest('.administrative-process-budget-allocation').find('.amount').val(budget_allocation.amount);
    } else {
      $(this).closest('.administrative-process-budget-allocation').find('.amount').val("");
    }
  });

  function filterJudgmentFormLicitationObject() {
    var licitationObject = $("#administrative_process_object_type").val(),
        modalUrl = "<%= modal_judgment_forms_path %>?licitation_object=";

    $("#administrative_process_judgment_form").attr("data-modal-url",
                                                    modalUrl + licitationObject);
  }

  $("#administrative_process_object_type").change(function() {
    filterJudgmentFormLicitationObject();
  });

  filterJudgmentFormLicitationObject();
</script>
