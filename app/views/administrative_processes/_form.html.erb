<div class="tabs">
  <ul>
    <li><a href="#main">Principal</a></li>
    <li><a href="#budget-allocations">Dotações orçamentarias</a></li>
  </ul>

  <div id="main">
    <%= render 'main', :f => f %>
  </div>

  <div id="budget-allocations">
    <%= render 'budget_allocations', :f => f %>
  </div>
</div>

<script>
  (function () {
    var modalitiesGroups = <%= AdministrativeProcessModalitiesByObjectType.new.modalities_groups.to_json.html_safe %>,
        modalitiesOptions = _(<%= AdministrativeProcessModality.to_a.to_json.html_safe %>);

    function filterModalities () {
      var options = _(modalitiesGroups[this.value]);

      if (options.isUndefined()) {
        $("#administrative_process_modality").empty().closest("div.input").hide();
        return;
      }

      $("#administrative_process_modality").html("<option></option>").closest("div.input").show();

      modalitiesOptions.each(function (option) {
        if (!options.include(option[1])) {
          return;
        }

        $("#administrative_process_modality").append(function () {
          return $("<option>").text(option[0]).val(option[1]);
        });
      })
    }

    $("#administrative_process_object_type").change(filterModalities).change();
    $("#administrative_process_modality").val("<%= f.object.modality %>");
  })();

  (function () {
    var purchaseSolicitationItemGroupId = $("#administrative_process_purchase_solicitation_item_group_id").val();

    if (purchaseSolicitationItemGroupId) {
      disableBudgetAllocations();
    }
  })();

  $("#administrative_process_purchase_solicitation_item_group_id").on("change", function (event, purchase_solicitation_item_group) {
    $("#allocations").empty();

    if (purchase_solicitation_item_group) {
      $.each(purchase_solicitation_item_group.purchase_solicitations, function (i, purchase_solicitation) {
        $.each(purchase_solicitation.budget_allocations, function (i, budget_allocation) {
          renderBudgetAllocation(budget_allocation);
        });
      });

      disableBudgetAllocations();
    } else {
      enableBudgetAllocations();
    }

    calculateAllocationsTotalValue();
  });

  function renderBudgetAllocation(budget_allocation) {
    var budgetAllocationBinds = [];
    var budgetAllocationUUID = _.uniqueId();

    budgetAllocationBinds["uuid_administrative_process_budget_allocation"] = "fresh-" + budgetAllocationUUID;

    $("#allocations").append(
      $("#administrative-process-budget-allocations-template").mustache(budgetAllocationBinds)
      ).trigger("append.mustache");

    fillBudgetAllocation(budgetAllocationUUID, budget_allocation);
  }

  function fillBudgetAllocation(uuid, budget_allocation) {
    var prefixNameUuid = "#administrative_process_administrative_process_budget_allocations_attributes_fresh-" + uuid;

    $(prefixNameUuid + "_budget_allocation").val(budget_allocation.description);
    $(prefixNameUuid + "_budget_allocation_id").val(budget_allocation.budget_allocation_id);
    $(prefixNameUuid + "_budget_allocation_amount").val(numberWithDelimiter(budget_allocation.amount));
  }

  function disableBudgetAllocations() {
    $("#budget-allocations .modal").attr("disabled", "disabled");
    $("#budget-allocations .add-administrative-process-budget-allocation").hide();
    $("#budget-allocations .remove-administrative-process-budget-allocation").hide();
  }


  function enableBudgetAllocations() {
    $("#budget-allocations .add-administrative-process-budget-allocation").attr("disabled", false);
    $("#budget-allocations .add-administrative-process-budget-allocation").show();
  }

  <% if f.object.persisted? && !f.object.waiting? %>
    $('form.administrative_process :input').attr('disabled', true);
    $('form.administrative_process .add-administrative-process-budget-allocation').hide();
    $('form.administrative_process .remove-administrative-process-budget-allocation').hide();
  <% end %>

  function calculateAllocationsTotalValue() {
    var total = 0,
        value;

    $.each($('.allocation-value:visible'), function() {
      value = $(this).attr('value');
      if (value) {
        total += parsePtBrFloat(value);
      }
    });
    $('#administrative_process_total_allocations_value').val(numberWithDelimiter(total));
  }

  $('form.administrative_process').on('keyup', '.allocation-value', function() {
    calculateAllocationsTotalValue();
  });

  $('form.administrative_process').on('click', '.remove-administrative-process-budget-allocation', function() {
    calculateAllocationsTotalValue();
  });

  $('form.administrative_process').on('change', '.budget-allocation', function (event, budget_allocation) {
    if (budget_allocation){
      $(this).closest('.administrative-process-budget-allocation').find('.amount').val(budget_allocation.amount);
    } else {
      $(this).closest('.administrative-process-budget-allocation').find('.amount').val("");
    }
  });
</script>
