<fieldset class="direct-purchase-budget-allocation nested contrasted">
  <div class="yui3-g">
    <%= f.input :id, :as => 'hidden' %>
    <%= f.input :_destroy, :as => 'hidden', :input_html => { :class => 'destroy' } %>

    <div class="yui3-u-1-3">
      <%= f.input :budget_allocation, :input_html => { :size => 10, :class => 'budget-allocation' } %>
    </div>

    <div class="yui3-u-1-3">
      <%= f.input :expense_economic_classification, :disabled => true, :input_html => {  } %>
    </div>

    <div class="yui3-u-1-3">
      <%= f.input :amount, :disabled => true, :input_html => { :class => 'item-price', :value => number_with_precision(f.object.amount) } %>
    </div>
  </div>

  <%= f.input :pledge_type %>

  <div id="items-<%= f.nested_identifier %>">
    <%= f.association :items, :collection => localized(f.object.items) do |p| %>
      <%= render 'direct_purchase_budget_allocation_items/form', :f => p %>
    <% end %>
  </div>

  <%= mustache "items-template-#{f.nested_identifier}" do %>
    <%= f.association :items_attributes, :collection => f.object.items.build, :index => '{{uuid_item}}' do |item| %>
      <%= render 'direct_purchase_budget_allocation_items/form', :f => item %>
    <% end %>
  <% end %>

  <div class="nested-remove">
    <input type="button" class="button affirmative add-item-<%= f.nested_identifier %>" value="Adicionar Item">
  </div>

  <div class="nested-remove">
    <input type="button" class="button negative remove-direct-purchase-budget-allocation" value="Remover Dotação">
  </div>
</fieldset>

<script>
  $("#items-template-<%= f.nested_identifier %>").nestedForm({
    add: ".add-item-<%= f.nested_identifier %>",
    remove: ".remove-item",
    target: "#items-<%= f.nested_identifier %>",
    fieldToRemove: '.item',
    uuid: "uuid_item",
    right: true
  });

  $('form.direct_purchase').delegate('.material', 'change', function (event, data) {
    if (data){
      var record = data.record,
          inputs = $(this).closest('.item').find(':input');
      $(inputs[4]).val(record.data("reference-unit"));
    }
  });

  $('form.direct_purchase').delegate('.item-quantity, .item-unit-price', 'keyup', function(){
    var itemDiv = $(this).closest('.item'),
        itemQuantity = parsePtBrFloat(itemDiv.find('.item-quantity').val() || '0'),
        itemUnitPrice = parsePtBrFloat(itemDiv.find('.item-unit-price').val() || '0'),
        total = floatToPtBrString(itemQuantity * itemUnitPrice);

    itemDiv.find('.item-price').attr('value', total);
  });

  $('form.direct_purchase').delegate('.item-price', 'keyup', function(){
    var itemDiv = $(this).closest('.item'),
        itemQuantity = parsePtBrFloat(itemDiv.find('.item-quantity').val() || '0'),
        itemPrice = parsePtBrFloat(itemDiv.find('.item-price').val() || '0'),
        unitPrice = floatToPtBrString(itemPrice / itemQuantity);

    itemDiv.find('.item-unit-price').attr('value', unitPrice);
  });
</script>
