<%= f.error :items %>

<div class="d-flex justify-content-between">
  <%= f.input :supply_date, as: :fake, input_html:{ value: f.object&.items[0]&.created_at&.strftime('%d%m%Y'), disabled: true }, label:"Data  do Pedido" %>

  <% unless f.object.updatabled %>
    <div style="padding-top: 2rem">
      <button type="button" class="button primary edit-order-items" style="float: right; margin-bottom: 10px;">Editar</button>
    </div>
  <% end %>
</div>

<table id="items-records" class="records">
  <thead>
  <tr>
    <th>Material</th>
    <th>Qtd. Licitada</th>
    <th width="5%">Qtd. Fornecida</th>
    <th width="10%">Saldo</th>
    <th width="10%">Qtd. Pedido</th>
    <th >Status</th>
  </tr>
  </thead>
  <tbody>
  <% f.object.try(:contract).try(:winning_items).each do |ratification_item| %>
    <% material = ratification_item.purchase_process_item.material %>
    <%= f.association :items, :collection => init_object(f.object, material) do |p| %>
      <% response = SupplyOrder.total_balance(f.object.licitation_process, f.object.purchase_solicitation, material, p.object.quantity, f.object, f.object.contract) %>

      <%= render 'supply_order_items/form', f: p, material: material, licitation_process: f.object.licitation_process_id, balance: response['balance'].to_i %>
    <% end %>
  <% end %>
  </tbody>
</table>

<style>
  .blue_status{
    color: blue
  }
  .red_status{
    color: red;
  }
</style>

<script>
  <%if f.object.items.present? %>
  $(".supply_order_quantity").prop('readonly', true);
  <% end %>

  <%unless f.object.persisted? %>
  $('.edit-order-items').hide();
  <% end %>

  $(".edit-order-items").click(function(){
    $(".supply_order_quantity").prop('readonly', !$(".supply_order_quantity").prop('readonly'));
  })
</script>
