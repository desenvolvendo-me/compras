<div class="yui3-g">
  <div class="yui3-u-1-3">
    <%= f.input :licitation_process, :disabled => true %>
  </div>

  <div class="yui3-u-1-3">
    <%= f.input :licitation_process_process_date, :disabled => true, :input_html => { :value => f.object.decorator.process_date } %>
  </div>

  <div class="yui3-u-1-3">
    <%= f.input :administrative_process, :disabled => true %>
  </div>

  <div class="yui3-u-1">
    <%= f.input :provider %>
  </div>

  <div class="yui3-u-1">
    <%= f.input :status, :disabled => true %>
  </div>

  <% if f.object.administrative_process_invited? %>
    <div class="yui3-u-1-4">
      <%= f.input :invited %>
    </div>

    <div class="yui3-u-1-4">
      <%= f.input :protocol  %>
    </div>

    <div class="yui3-u-1-4">
      <%= f.input :protocol_date %>
    </div>

    <div class="yui3-u-1-4">
      <%= f.input :receipt_date %>
    </div>
  <% end %>
</div>

<div class="tabs">
  <ul>
    <li><%= link_to "Documentos", "#documents" %></li>
    <li><%= link_to "Propostas", "#proposal" %></li>
  </ul>

  <div id="documents">
    <%= render 'documents', :f => f %>
  </div>

  <div id="proposal">
    <%= render f.object.decorator.show_proposal_tabs, :f => f  %>
  </div>
</div>

<script>
  function toggleEnabledDisabledFields() {
    if($('#licitation_process_bidder_invited').is(':checked')) {
      $('#licitation_process_bidder_protocol, #licitation_process_bidder_protocol_date, #licitation_process_bidder_receipt_date').attr('disabled', false);
     } else {
       $('#licitation_process_bidder_protocol, #licitation_process_bidder_protocol_date, #licitation_process_bidder_receipt_date').attr('disabled', true);
     }
   }

   function toggleRequiredFields() {
     if($('#licitation_process_bidder_invited').is(':checked')) {
       $('label[for|="licitation_process_bidder_protocol"], label[for|="licitation_process_bidder_protocol_date"], label[for|="licitation_process_bidder_receipt_date"]').append('<abbr title="obrigatÃ³rio">*</abbr>');
     } else {
       removeDuplicateRequiredLabels();
     }
   }

   function removeValuesFromDisabledFields() {
     if(!$('#licitation_process_bidder_invited').is(':checked')) {
       $('#licitation_process_bidder_protocol, #licitation_process_bidder_protocol_date, #licitation_process_bidder_receipt_date').val('');
     }
   }

   function removeDuplicateRequiredLabels(){
     $('label[for|="licitation_process_bidder_protocol"] abbr, label[for|="licitation_process_bidder_protocol_date"] abbr, label[for|="licitation_process_bidder_receipt_date"] abbr').remove();
   }

  $('#licitation_process_bidder_invited').click(function() {
    toggleEnabledDisabledFields();
    removeValuesFromDisabledFields();
    toggleRequiredFields();
  });

  function calculateProposalTotalValue(field) {
    var total = 0,
        value,
        container = field.closest('.container');

    container.find('.item-total-price').each(function() {
      value = $(this).val();

      if (value != '') {
        total += parsePtBrFloat(value);
      }
    });

    container.find('.proposal-total-value').val(numberWithDelimiter(total, '.', ','));
  };

  $('form.licitation_process_bidder').delegate('.item-unit-price', 'keyup', function() {
     var itemDiv = $(this).closest('div.item'),
         unitPrice = parsePtBrFloat(itemDiv.find('.item-unit-price').val() || '0'),
         quantity = parsePtBrFloat(itemDiv.find('.item-quantity').val() || '0'),
         totalPrice = numberWithDelimiter(unitPrice * quantity, '.', ',');
     itemDiv.find('.item-total-price').val(totalPrice);
     calculateProposalTotalValue($(this));
   });

  removeDuplicateRequiredLabels();
  toggleEnabledDisabledFields();
  toggleRequiredFields();
</script>
