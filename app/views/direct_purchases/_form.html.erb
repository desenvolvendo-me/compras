<div class="tabs">
  <ul>
    <li><a href="#main">Principal</a></li>
    <li><a href="#allocations">Dotações</a></li>
  </ul>

  <div id="main">
    <%= render 'main', :f => f %>
  </div>

  <div id="allocations">
    <%= render 'budget_allocations', :f => f %>
  </div>
</div>

<script>
  (function () {
    var purchaseSolicitationItemGroupId = $("#direct_purchase_purchase_solicitation_item_group_id").val();

    if (purchaseSolicitationItemGroupId) {
      disableBudgetAllocations();
    }
  })();

  $("#direct_purchase_purchase_solicitation_item_group_id").on("change", function (event, purchase_solicitation_item_group) {
    $("#budget-allocations").empty();

    if (purchase_solicitation_item_group) {
      $('#direct_purchase_total_allocations_items_value').val(numberWithDelimiter(purchase_solicitation_item_group.total));

      $.each(purchase_solicitation_item_group.purchase_solicitations, function (i, purchase_solicitation) {
        $.each(purchase_solicitation.budget_allocations, function (i, budget_allocation) {
          renderBudgetAllocation(budget_allocation);
        });
      });

      disableBudgetAllocations();
    } else {
      $('#direct_purchase_total_allocations_items_value').val("0,00");
      enableBudgetAllocations();
    }
  });

  function renderBudgetAllocation(budget_allocation) {
    var budgetAllocationBinds = [];
    var budgetAllocationUUID = _.uniqueId();

    budgetAllocationBinds["uuid_direct_purchase_budget_allocation"] = "fresh-" + budgetAllocationUUID;

    $("#budget-allocations").append(
      $("#direct-purchase-budget-allocations-template").mustache(budgetAllocationBinds)
      ).trigger("append.mustache");

    fillBudgetAllocation(budgetAllocationUUID, budget_allocation);


    $.each(budget_allocation.items, function (i, budget_allocation_item) {
      renderBudgetAllocationItem(budgetAllocationUUID, budget_allocation_item);
    });
  }

  function renderBudgetAllocationItem(budget_allocation_uuid, budget_allocation_item) {
    var budgetAllocationItemBinds = [];
    var itemsID = "#items-fresh-" + budget_allocation_uuid;
    var itemMustacheId = "#items-template-fresh-" + budget_allocation_uuid;
    var budgetAllocationItemUUID = _.uniqueId();

    budgetAllocationItemBinds["uuid_item"] = "fresh-" + budgetAllocationItemUUID;

    $(itemsID).append(
      $(itemMustacheId).mustache(budgetAllocationItemBinds)
      ).trigger("append.mustache");

    fillBudgetAllocationItem(budgetAllocationItemUUID, budget_allocation_item);
  }

  function fillBudgetAllocation(uuid, budget_allocation) {
    var prefixNameUuid = "#direct_purchase_direct_purchase_budget_allocations_attributes_fresh-" + uuid;

    $(prefixNameUuid + "_budget_allocation").val(budget_allocation.description);
    $(prefixNameUuid + "_budget_allocation_id").val(budget_allocation.budget_allocation_id);
    $(prefixNameUuid + "_expense_nature").val(budget_allocation.expense_nature);
    $(prefixNameUuid + "_amount").val(numberWithDelimiter(budget_allocation.amount));
  }

  function fillBudgetAllocationItem(uuid, budget_allocation_item) {
    var prefixNameUuid = "#direct_purchase_direct_purchase_budget_allocations_attributes___uuid_direct_purchase_budget_allocation___items_attributes_fresh-" + uuid;

    $(prefixNameUuid + "_material").val(budget_allocation_item.material_description);
    $(prefixNameUuid + "_material_id").val(budget_allocation_item.material_id);
    $(prefixNameUuid + "_brand").val(budget_allocation_item.brand);
    $(prefixNameUuid + "_reference_unit").val(budget_allocation_item.reference_unit);
    $(prefixNameUuid + "_quantity").val(numberWithDelimiter(budget_allocation_item.quantity));
    $(prefixNameUuid + "_unit_price").val(numberWithDelimiter(budget_allocation_item.unit_price));
    $(prefixNameUuid + "_estimated_total_price").val(numberWithDelimiter(budget_allocation_item.estimated_total_price));
  }

  function disableBudgetAllocations() {
    $("#allocations :input").attr("readonly", "readonly");
    $("#allocations .modal").attr("disabled", "disabled");
    $("#allocations .remove-item").hide();
    $("#allocations .remove-direct-purchase-budget-allocation").hide();
    $("#allocations .add-direct-purchase-budget-allocation").hide();
    $("#allocations .add-budget-allocation-item").hide();
  }


  function enableBudgetAllocations() {
    $("#allocations .add-direct-purchase-budget-allocation").attr("disabled", false);
    $("#allocations .add-direct-purchase-budget-allocation").show();
  }

  $('form.direct_purchase').on('change', '.budget-allocation', function (event, budget_allocation) {
    if (budget_allocation) {
      $(this).closest('div.direct-purchase-budget-allocation').find('.classification').val(budget_allocation.expense_nature);
      $(this).closest('div.direct-purchase-budget-allocation').find('.amount').val(budget_allocation.amount);
    }
  });

  $('form.direct_purchase').on('change', '.material', function (event, material) {
    if (material) {
      $(this).closest('.item').find('.reference-unit').val(material.reference_unit);
    }
  });

  function calcItemOrder() {
    $('div.direct-purchase-budget-allocation').each(function (index, item) {
      $(this).find('.item .hidden .destroy[value=false]').each(function (index, item) {
        $(this).closest('.item').find('.order').val(index + 1);
      });
    });
  }

  function calculateItemsTotalValue() {
    var total = new BigNumber(0),
    value;
    $('.item-price:visible').each(function() {
      value = $(this).attr('value');
      if (value) {
        total = total.add(parsePtBrFloat(value));
      }
    });
    $('#direct_purchase_total_allocations_items_value').val(numberWithDelimiter(parseFloat(total)));
  }

  $('form.direct_purchase').on('keyup', '.item-quantity, .item-unit-price', function() {
    var itemDiv = $(this).closest('.item'),
        itemQuantity = new BigNumber(parsePtBrFloat(itemDiv.find('.item-quantity').val() || '0')),
        itemUnitPrice = new BigNumber(parsePtBrFloat(itemDiv.find('.item-unit-price').val() || '0')),
        total = itemQuantity.multiply(itemUnitPrice);

    itemDiv.find('.item-price').val(numberWithDelimiter(parseFloat(total)));
    calculateItemsTotalValue();
  });

  $('form.direct_purchase').on('click', '.remove-direct-purchase-budget-allocation, .remove-item', function() {
    calculateItemsTotalValue();
    calcItemOrder();
  });

  // Licitation exemptions

  var purchaseLicitationExemption = '0,00',
      buildLicitationExemption = '0,00';

  <% if f.object.licitation_object %>
    purchaseLicitationExemption = numberWithDelimiter(<%= f.object.licitation_object.purchase_licitation_exemption %>);
    buildLicitationExemption = numberWithDelimiter(<%= f.object.licitation_object.build_licitation_exemption %>);
  <% end %>

  function setLicitationExemption() {
    var modality = $('#direct_purchase_modality').attr('value');

    switch(modality) {
      case '<%= DirectPurchaseModality::MATERIAL_OR_SERVICE %>':
        $('#direct_purchase_licitation_exemption').val(purchaseLicitationExemption);
        break;
      case '<%= DirectPurchaseModality::ENGINEERING_WORKS %>':
        $('#direct_purchase_licitation_exemption').val(buildLicitationExemption);
        break;
      default:
        $('#direct_purchase_licitation_exemption').val('0,00');
    }
  }

  $('form.direct_purchase').on('change', '#direct_purchase_licitation_object_id', function (event, licitation_object) {
    if (licitation_object) {
      purchaseLicitationExemption = licitation_object.purchase_licitation_exemption;
      buildLicitationExemption    = licitation_object.build_licitation_exemption;
    } else {
      purchaseLicitationExemption = 0;
      buildLicitationExemption = 0;
    }

    setLicitationExemption();
  });

  $('form.direct_purchase').on('change', '#direct_purchase_modality', function () {
    setLicitationExemption();
  });

  $('form.direct_purchase').on('append.mustache', function () {
    calcItemOrder();
  });

  calcItemOrder();
</script>
