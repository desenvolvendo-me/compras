<div class="tabs">
  <ul>
    <li><a href="#general">Dados gerais</a></li>
    <li><a href="#allocations">Dotações</a></li>
  </ul>

  <div id="general">
    <%= render 'general', :f => f %>
  </div>

  <div id="allocations">
    <%= render 'budget_allocations', :f => f %>
  </div>
</div>

<script>
  <% if f.object.persisted? %>
    $('form.direct_purchase :input:not([name=_method]):not([name=authenticity_token])').attr('disabled', true);
    $('.button.negative').hide();
    $('.button.affirmative').hide();
  <% end %>

  $('form.direct_purchase').delegate('.budget-allocation', 'change', function (event, budget_allocation) {
    if (budget_allocation) {
      $(this).closest('div.direct-purchase-budget-allocation').find('.classification').val(budget_allocation.expense_nature);
      $(this).closest('div.direct-purchase-budget-allocation').find('.amount').val(budget_allocation.amount);
    }
  });

  $('form.direct_purchase').delegate('.material', 'change', function (event, material) {
    if (material) {
      $(this).closest('.item').find('.reference-unit').val(material.reference_unit);
    }
  });

  function calcItemOrder() {
    $('div.direct-purchase-budget-allocation').each(function(index, item){
      $(this).find('.item .hidden .destroy[value=false]').each(function(index, item){
        $(this).parent().parent().find('.order').val(index + 1);
      });
    });
  }

  function calculateItemsTotalValue() {
    var total = 0,
    value;
    $.each($('.item-price:visible'), function() {
      value = $(this).attr('value');
      if (value) {
        total += parsePtBrFloat(value);
      }
    });
    $('#direct_purchase_total_allocations_items_value').val(floatToPtBrString(total));
  }

  $('form.direct_purchase').delegate('.item-quantity, .item-unit-price', 'keyup', function() {
    var itemDiv = $(this).closest('.item'),
        itemQuantity = parsePtBrFloat(itemDiv.find('.item-quantity').val() || '0'),
        itemUnitPrice = parsePtBrFloat(itemDiv.find('.item-unit-price').val() || '0'),
        total = floatToPtBrString(itemQuantity * itemUnitPrice);

    itemDiv.find('.item-price').val(total);
    calculateItemsTotalValue();
  });

  $('form.direct_purchase').delegate('.remove-direct-purchase-budget-allocation, .remove-item', 'click', function() {
    calculateItemsTotalValue();
    calcItemOrder();
  });

  // Licitation exemptions

  var purchaseLicitationExemption = '0,00',
      buildLicitationExemption = '0,00';

  <% if f.object.licitation_object %>
    purchaseLicitationExemption = floatToPtBrString(<%= f.object.licitation_object.purchase_licitation_exemption %>);
    buildLicitationExemption = floatToPtBrString(<%= f.object.licitation_object.build_licitation_exemption %>);
  <% end %>

  function setLicitationExemption() {
    var modality = $('#direct_purchase_modality').attr('value');

    switch(modality) {
      case '<%= DirectPurchaseModality::MATERIAL_OR_SERVICE %>':
        $('#direct_purchase_licitation_exemption').val(purchaseLicitationExemption);
        break;
      case '<%= DirectPurchaseModality::ENGINEERING_WORKS %>':
        $('#direct_purchase_licitation_exemption').val(buildLicitationExemption);
        break;
      default:
        $('#direct_purchase_licitation_exemption').val('0,00');
    }
  }

  $('form.direct_purchase').delegate('#direct_purchase_licitation_object_id', 'change', function (event, licitation_object) {
    if (licitation_object) {
      purchaseLicitationExemption = licitation_object.purchase_licitation_exemption;
      buildLicitationExemption    = licitation_object.build_licitation_exemption;
    } else {
      purchaseLicitationExemption = 0;
      buildLicitationExemption = 0;
    }

    setLicitationExemption();
  });

  $('form.direct_purchase').delegate('#direct_purchase_modality', 'change', function () {
    setLicitationExemption();
  });

  $('form.direct_purchase').bind('append.mustache', function(){
    calcItemOrder();
  });

  calcItemOrder();
</script>
