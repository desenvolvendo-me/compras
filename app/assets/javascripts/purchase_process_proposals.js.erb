$(document).ready(function() {
  calculateTotalValue();
  countItems();

  function calculateTotalValue() {
    var totalValueInput  = $("div#total_value").find('input'),
        totalPriceInputs = $("div.total_price input"),
        totalValue       = 0;

    totalPriceInputs.each(function() {
      totalValue += parsePtBrFloat($(this).val());
    });

    totalValueInput.val(numberWithDelimiter(totalValue));
  };

  function countItems() {
    $('input.item_counter').each(function(index, input) {
      $(input).val(index + 1);
    });
  }

  $("div.total_price").on('change', 'input', function() {
    calculateTotalValue();
  });

  $("div.unit_price").on('keyup', function() {
    var unitPrice       = parsePtBrFloat($(this).find('input').val()),
        quantity        = $(this).prev('.quantity').find('input').val(),
        totalPrice      = numberWithDelimiter(unitPrice * quantity),
        totalPriceInput = $(this).next('.total_price').find('input');

    totalPriceInput.val(totalPrice);
    totalPriceInput.trigger('change');
  });

  $("div.lots div.total_price").on('keyup', function() {
    calculateTotalValue();
  });

  $("div.global div.total_price").on('keyup', function() {
    calculateTotalValue();
  });

  $('form.simple_form').submit(function(e){
    e.preventDefault();
    var takenPriceInput  = $("div#price_taken").find('input'),
        takenPrice       = parsePtBrFloat(takenPriceInput.val()),
        disqualify_below = parseFloat(takenPriceInput.data('disqualify-below')),
        disqualify_above = parseFloat(takenPriceInput.data('disqualify-above')),
        totalValue       = parsePtBrFloat($("div#total_value").find('input').val()),
        $el = $(this);

    var btn = {"OK": function() {
        $el.unbind('submit').submit();
        $( this ).dialog( "close" );
      },
      Cancelar: function() {
        $(":submit").prop('disabled', false);
        $( this ).dialog( "close" );
      }};

    if(disqualify_below){
      if(takenPrice - (takenPrice * disqualify_below/100) > totalValue)
        return custom_alert('A proposta será automaticamente desclassificada por motivo de valor inexequivel, estando abaixo de %'+ disqualify_below +' do preço estimado.', 'Atenção', btn)
    }

    if(disqualify_above){
      if(takenPrice + (takenPrice * disqualify_above/100) < totalValue )
        return custom_alert('A proposta será automaticamente desclassificada por motivo de valor superior em %'+ disqualify_below +' ao preço estimado.', 'Atenção', btn)
    }

    $el.unbind('submit').submit();
  })
});
