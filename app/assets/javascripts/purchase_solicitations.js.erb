function onlyEditWithDemand() {
    var demand_id = $('#purchase_solicitation_demand_id').val();

    if (demand_id) {
        $('#purchase_solicitation_material').attr('disabled', true);
        $('#purchase_solicitation_brand').attr('disabled', true);
        $('#purchase_solicitation_unit_price').attr('disabled', true);
        $('#purchase_solicitation_items_button').attr('data-disabled', "existe demanda vinculada");
        $('.remove-nested-record').attr('data-disabled', "existe demanda vinculada");

        $('.edit-nested-record').on("click", function () {
            $('#purchase_solicitation_items_button').removeAttr('data-disabled');
        });
    }
}

$(document).ready(function () {
    onlyEditWithDemand()

    $("#purchase_solicitation_items_button").on("click", function () {
        $('.remove-nested-record').attr('data-disabled', "existe demanda vinculada");
    });

    function calculateItemsTotalValue() {
        var total = new BigNumber(0),
            value;

        $('.nested-record:visible').find('.input.purchase_solicitation_items_estimated_total_price :input').each(function () {
            value = $(this).attr('value');

            if (value) {
                total = total.add(parsePtBrFloat(value));
            }
        });

        return total
    }

    function refreshItemsTotalValue(itemsTotalValue) {
        $('#purchase_solicitation_total_items_value').val(numberWithDelimiter(parseFloat(itemsTotalValue)));
    }

    function materialType() {
        var materialType,
            purchaseSolicitationKind = $('#purchase_solicitation_kind').val();

        switch (purchaseSolicitationKind) {
            case "<%= PurchaseSolicitationKind::SERVICES %>" :
                materialType = "<%= MaterialType::SERVICE %>";
                break;
            case "<%= PurchaseSolicitationKind::PRODUCTS %>" :
                materialType = "<%= MaterialType::CONSUMPTION %>";
                break;
            case "<%= PurchaseSolicitationKind::GOODS %>" :
                materialType = "<%= MaterialType::ASSET %>";
                break;
        }

        return materialType;
    }

    function setMaterialSource() {
        var url = Routes.materials,
            params = {
                by_material_type: materialType()
            };

        url += "?" + jQuery.param(params);
        $("#purchase_solicitation_material").data('source', url);
    }

    function materialOrService() {
        var materialOrService,
            purchaseSolicitationKind = $('#purchase_solicitation_kind').val();

        if (purchaseSolicitationKind === "<%= PurchaseSolicitationKind::SERVICES %>") {
            materialOrService = "Servi√ßo";
        } else {
            materialOrService = "Material";
        }

        return materialOrService;
    }

    function setMaterialLabel() {
        $("#purchase_solicitation_material").prev("label").text(materialOrService());
        $("#purchase_solicitation_material").requiredField(false);
        $("#purchase_solicitation_material").requiredField(true);
    }

    function setBudgetAllocationSource() {
        var url = Routes.budget_allocations,
            budgetStructureId = $("#purchase_solicitation_budget_structure_id").val(),
            year = $("#purchase_solicitation_accounting_year").val(),
            params = {by_year: year};

        if (budgetStructureId) {
            params['budget_structure_id'] = budgetStructureId;
        }

        url += "?" + jQuery.param(params);

        $("#purchase_solicitation_budget_allocation").data('source', url);
    }

    function filterExpenseNatureSource(expenseNatureId) {
        var url = Routes.expense_natures,
            year = $("#purchase_solicitation_accounting_year").val(),
            params = {by_year: year};

        if (expenseNatureId) {
            params['by_parent_id'] = expenseNatureId;
        }

        url += "?" + jQuery.param(params);

        $("#purchase_solicitation_expense_nature").data('source', url);
    }

    $('#purchase_solicitation_budget_allocation_id').on("change", function (event, budgetAllocation) {
        if (budgetAllocation) {
            $('#purchase_solicitation_budget_allocation_balance').val(numberWithDelimiter(budgetAllocation.balance));
            $('#purchase_solicitation_budget_allocation_expense_nature').val(budgetAllocation.expense_nature);
            filterExpenseNatureSource(budgetAllocation.expense_nature_id);
        } else {
            $('#purchase_solicitation_budget_allocation_balance').val('0,00');
            $('#purchase_solicitation_budget_allocation_expense_nature').val('');
        }
    });

    $('#purchase_solicitation_budget_structure_id').on("change", function (event, budgetStructure) {
        setBudgetAllocationSource();
    });

    $('#purchase_solicitation_accounting_year').on("change", function (event, budgetStructure) {
        setBudgetAllocationSource();
    });

    $('form.purchase_solicitation').on('keyup', '#purchase_solicitation_quantity, #purchase_solicitation_unit_price', function () {
        var itemQuantity = new BigNumber(parsePtBrFloat($('#purchase_solicitation_quantity').val() || '0')),
            itemUnitPrice = new BigNumber(parsePtBrFloat($('#purchase_solicitation_unit_price').val() || '0')),
            total = itemUnitPrice.multiply(itemQuantity);

        $('#purchase_solicitation_estimated_total_price').val(numberWithDelimiter(parseFloat(total)));

        total = total.add(calculateItemsTotalValue());

        refreshItemsTotalValue(total);
    });

    $('#purchase_solicitation_material_id').on('change', function (event, material) {
        $('#purchase_solicitation_reference_unit').val('');

        if (material) {
            $('#purchase_solicitation_reference_unit').val(material.reference_unit);
        }
    });

    $('#purchase_solicitation_kind').on('change', function () {
        setMaterialLabel();
        setMaterialSource();
    });

    $('#purchase_solicitation_budget_structure_id').on('change', function () {
        setBudgetAllocationSource();
    });

    $('#purchase_solicitation_items_records').on('nestedGrid:AfterAdd', function () {
        refreshItemsTotalValue(calculateItemsTotalValue());
    });

    $('#purchase_solicitation_items_records').on('nestedGrid:afterRemove', function () {
        refreshItemsTotalValue(calculateItemsTotalValue());
    });

    setMaterialLabel();
    setMaterialSource();
    setBudgetAllocationSource();

    $("#purchase_solicitation_items_button").click(function () {

        material = $('#purchase_solicitation_material').val();
        lote = $('#purchase_solicitation_lot').val();

        list_material_lote = []
        if ($('.nested-record').length != 0) {
            var row = null
            $('table#purchase_solicitation_items_records tr').each(function (i) {
                row = $(this)
                var row_material = null;
                var row_lote = null;
                $(this).find("td").each(function (i) {
                    if (i == 0) {
                        row_material = $(this).text().trim();
                    } else if (i == 1) {
                        row_lote = $(this).text().trim();
                    } else {
                        return false;
                    }
                })
                list_material_lote.push(row_material + ":" + row_lote);
            })

            list_material_lote.forEach(function (i) {
                if (material + ":" + lote == i) {
                    alert("<%= I18n.t('errors.messages.record_already_exists') %>");
                    setTimeout(function () {
                        $('table#purchase_solicitation_items_records tr:last').remove();
                    }, 100);
                }
            })

        }
    });

  $("#budgetary_expense_id").change(function(event, data){
    if(data.project_activity){
      $("#budgetary_project_activity").val(data.project_activity.name + " (" + data.project_activity.code + ")");
    }
    if(data.nature_expense){
      $("#budgetary_nature_expense").val(data.nature_expense.description);
    }
    if(data.resource_source){
      $("#budgetary_resource_source").val(data.resource_source.code);
    }
  })

  $("#budgetary-fields").on("nestedGrid:requiredError", function(){
    $.each($(this).find('.required:input'), function(){
      $(this).requiredField(true);
    });
  })
});
