$(document).ready(function() {
  const $trading  = $("#tradings-fields");
  var $currentPanel = $("#bids-tab .ui-tabs-panel").eq($("#bids-tab").tabs('option', 'active'));

  $trading.find('input.item_chooser:first').attr('checked', true).trigger('change');

  function allowNewBid(allowed) {
    if (allowed) {
      $('button#make_bid').removeAttr('data-disabled');
      $('button#finish_dispute').removeAttr('data-disabled');
      $('#amount').attr('disabled', false);
    } else {
      $('button#make_bid').attr('data-disabled', '');
      $('button#make_bid').data('disabled', "<%= I18n.t 'purchase_process_trading.messages.make_bid_disabled_message' %>");
      $('button#finish_dispute').attr('data-disabled', '');
      $('button#finish_dispute').data('disabled', "<%= I18n.t 'purchase_process_trading.messages.make_bid_disabled_message' %>");
      $('#amount').attr('disabled', true);
    }
  }

  function allowUndoBid(allowed) {
    if (allowed) {
      $('button#undo_bid').removeAttr('data-disabled');
    } else {
      $('button#undo_bid').attr('data-disabled', '');
      $('button#undo_bid').data('disabled', "<%= I18n.t 'purchase_process_trading.messages.undo_bid_disabled_message' %>");
    }
  }

  function updateBenefitedBidLink(itemId) {
    var url = $('a#benefited_bid').data('url');

    url += '?' + $.param({item_id: itemId});

    $('a#benefited_bid').attr('href', url);
  }

  function allowBenefitedBid(historic, lowest_bid, next_bid) {
    var message = null;

    if (_.isEmpty(historic) || !_.isEmpty(next_bid)) {
      message = "<%= I18n.t 'purchase_process_trading_item.messages.trading_item_not_finished' %>";
    } else if (lowest_bid.creditor_benefited) {
      message = "<%= I18n.t 'purchase_process_trading_item.messages.lowest_proposal_already_benefited' %>";
    }

    if (message) {
      $('a#benefited_bid').attr('data-disabled', '');
      $('a#benefited_bid').data('disabled', message);
    } else {
      $('a#benefited_bid').removeAttr('data-disabled');
    }
  }

//  function fillForm(bid) {
//    $trading.find('#amount').val('0,00');

//    if (_.isEmpty(bid)) {
//      $trading.find('#bid_id').val('');
//      $trading.find('#accreditation_creditor').val('');
//      $trading.find('#accreditation_creditor_id').val('');
//      $trading.find('#lot').val('');
//      $trading.find('#round').val('');

//      allowNewBid(false);
//    } else {
//      $trading.find('#bid_id').val(bid.id);
//      $trading.find('#accreditation_creditor').val(bid.accreditation_creditor);
//      $trading.find('#accreditation_creditor_id').val(bid.accreditation_creditor_id);
//      $trading.find('#lot').val(bid.lot);
//      $trading.find('#round').val(bid.round);
//      $trading.find('#amount').val(bid.amount_with_reduction);

//      allowNewBid(true);
//    }
//  }

  function fillLowestBid(lowest_bid) {
    var bidAmount = $trading.find('input.item_chooser:checked').closest('tr').find('td.bid_amount'),
      bidCreditor = $trading.find('input.item_chooser:checked').closest('tr').find('td.bid_creditor');

    if ( _.isEmpty(lowest_bid) ) {
      lowest_bid.amount = '-';
      lowest_bid.creditor = '-';
    }

    bidCreditor.text(lowest_bid.creditor);
    bidAmount.text(lowest_bid.amount);
  }

  function fillItem(item) {
    var status = $trading.find('input.item_chooser:checked').closest('tr').find('td.status');

    fillLowestBid(item.lowest_bid);

    status.text(item.status);

//    $trading.find('#reduction_rate_value').val(item.reduction_rate_value);
//    $trading.find('#reduction_rate_percent').val(item.reduction_rate_percent);
  }

  function getNextBidFromServer(itemId) {
    var oldUrl = $trading.find('#next_bid_url').val(),
        newUrl = oldUrl.replace(/\/\d+\//, '/' + itemId + '/');

    $.ajax({
      url: newUrl,
      cache: false,
      dataType: 'json',
      success: function(item) {
//        fillForm(item.next_bid);
        fillHistoric(item.historic);
        fillItem(item)
        allowBenefitedBid(item.historic, item.lowest_bid, item.next_bid);
      }
    });
  }

  function processPersistErrors(errors) {
    var template     = $trading.find('#error_template'),
        error_dialog = $trading.find('#errors_dialog'),
        target       = error_dialog.find('#errors_content');

    target.empty();

    _.each(errors, function(error) {
      target.append( template.mustache({ error: error }) );
    });


    error_dialog.dialog('open');
  }

  function addBidToHistoric(bid, append) {
    var target   = $('table#historic tbody'),
      template = $('#historic_template'),
      content  = template.mustache(bid);

    if (append) {
      target.append( content );
    } else {
      target.prepend( content );
    }
  }

  function fillHistoric(historic) {
    $('table#historic tbody').empty();

    if ( _.isEmpty(historic) ) {
      allowUndoBid(false);
    } else {
      allowUndoBid(true);
    }

    _.each(historic, function(bid) {
      addBidToHistoric(bid, true);
    });
  }

  function fillCreditors(creditors) {
    var target = $trading.find('table#accreditation_creditors tbody'),
      template = $trading.find('#accreditation_creditors_template');

    target.empty();

    _.each(creditors, function(creditor) {
      target.append( template.mustache(creditor));
    });
  }

  function getCreditors(itemId) {
    var oldUrl = $('#creditor_list').val(),
      newUrl = oldUrl.replace(/\/\d+\//, '/' + itemId + '/');

    $.ajax({
      url: newUrl,
      cache: false,
      dataType: 'json',
      type: 'GET',
      success: function(creditors) {
        fillCreditors(creditors);
      }
    });
  }

  //buscar os historicos de lances
  $("#bids-tab .ui-tabs-anchor").click(function(){
    $currentPanel = $("#bids-tab .ui-tabs-panel:visible");
    var itemId = $currentPanel.find("#trading_item").val();

    getNextBidFromServer(itemId);
  })

  // reduz o valor do lance automaticamente quando inserido um novo form
  $(".trading-fields").on('cocoon:before-insert', function(e, bid_to_be_inserted, originalEvent) {
    //atualiza o valor do menor lance
    var hasNewAmount = $currentPanel.find("[name$='[amount]'].newRecord");

    if(hasNewAmount.length > 0){
      $currentPanel.find("[name$='[lowest_bid]']").val(hasNewAmount.last().val());
    }

    var reduction_value   = parsePtBrFloat($currentPanel.find("[name$='[reduction_rate_value]']").val()),
        reduction_percent = parsePtBrFloat($currentPanel.find("[name$='[reduction_rate_percent]']").val()),
        lowest_bid        = parsePtBrFloat($currentPanel.find("[name$='[lowest_bid]']").val()),
        last_round        = parseInt($currentPanel.find("[name$='[round]']").last().val()),
        bid_reduction     = 0.0;

    // calcula redução por valor ou porcentagem
    if(reduction_value){
      bid_reduction = lowest_bid - reduction_value;
    }else if(reduction_percent){
      bid_reduction = lowest_bid - (lowest_bid * reduction_percent) / 100;
    }

    $(bid_to_be_inserted).find("[name$='[amount]']")
      .val(floatToPtBrString(bid_reduction))
      .addClass('newRecord');

    $(bid_to_be_inserted).find("[name$='[round]']").val(last_round + 1);
  });

  // informar o usuario que o lance atual não pode ser maior que o melhor lance
  $("#bids-tab").on('change', "[name$='[amount]'].newRecord", function(){
    var lowest_bid = $currentPanel.find("[name$='[lowest_bid]']").val(),
        bid        = parsePtBrFloat(this.value);

    if(bid > parsePtBrFloat(lowest_bid)){
      custom_alert('O valor do lance digitado tem que ser menor que o Melhor Lance no valor de R$ '+ lowest_bid + '.', 'Atenção');
      this.value = '0,00';
    }
  });


  function undoLastBid(itemId) {
    var oldUrl = $('#undo_last_bid_url').val(),
      newUrl = oldUrl.replace(/\/\d+\//, '/' + itemId + '/');

    $.ajax({
      url: newUrl,
      dataType: 'json',
      type: 'POST',
      success: function(data) {
//        fillForm(data.next_bid);
        fillHistoric(data.historic);
        fillLowestBid(data.lowest_bid);

        allowNewBid(!_.isEmpty(data.next_bid));
        allowBenefitedBid(data.historic, data.lowest_bid, data.next_bid);
      }
    });
  }

  function submitReductions(itemId, $button) {
    var url = $trading.find('#persist_item_url').val(),
      percentData = {
        id: itemId,
        _method: 'put',
        purchase_process_trading_item: {
          reduction_rate_value: $currentPanel.find("[name$='[reduction_rate_value]']").val(),
          reduction_rate_percent: $currentPanel.find("[name$='[reduction_rate_percent]']").val()
        }
      };

    $.ajax({
      url: url + itemId,
      data: percentData,
      type: 'POST',
      dataType: 'json',
      success: function(data) {
        custom_alert('O registro foi salvo com sucesso!', 'Salvo com Sucesso');
      },

      error: function(xhr) {
        var errors = $.parseJSON(xhr.responseText).errors;

        $trading.find('#reduction_rate_value').val('0,00')
        $trading.find('#reduction_rate_percent').val('0,00')

        processPersistErrors(errors);
      }
    });
  }

  $('button.reduction_button').on('click', function(event) {
    event.preventDefault();

    var itemId = $(this).data('item');

    submitReductions(itemId, $(this));
  });

  //load creditor's bids
  $("#bids-tab [name$='[accreditation_creditor]']").change(function () {
    var url    = Routes.bid_form_purchase_process_trading + "?",
        params = { accreditation_creditor_id: this.value,
                   trading_item_id: $(this).data('trading-item'),
                    purchase_process_id: $("#licitation_process_id").val() };

    url += $.param(params);
    $.ajax({
      url: url,
      dataType: 'HTML',
      type: 'GET',
      success: function (data) {
        $currentPanel.find('.trading-fields').html(data);
      }
    });
  });

  $('#bids-tab').on('click', '.finish_dispute', function(event) {
    debugger
    var dataDisabled    = _($(this).attr('data-disabled')),
        itemID          = $(this).data('item'),
        acc_creditor_id = $currentPanel.find("[name$='[accreditation_creditor]']").val(),
        amount          = '0.0',
        status          = '<%= TradingItemBidStatus::DECLINED %>',
        round           = parseInt($currentPanel.find("[name$='[round]']").last());

    if ( dataDisabled.isEmpty() ) {
      var url = $('#persist_bid_url').val(),
        currentBid = {
          purchase_process_trading_item_bid: {
            amount: amount,
            purchase_process_accreditation_creditor_id: acc_creditor_id,
            status: status,
            round: round + 1,
            item_id: itemID
          }
        };

      $.ajax({
        url: url,
        data: currentBid,
        dataType: 'json',
        type: 'POST',
        success: function() {
          getNextBidFromServer(itemID);
          allowUndoBid(true);
          $currentPanel.find("[name$='[accreditation_creditor]']").trigger('change')
        },
        error: function(xhr) {
          var errors = $.parseJSON(xhr.responseText).errors;

          processPersistErrors(errors);
        }
      });
    }
  });

  $("#bids-tab").on('click', 'finish_bid', function(event) {
    event.preventDefault();
    var itemId = $trading.find('input.item_chooser:checked').parent().attr('data-id');

    var url = $trading.find('#persist_item_url').val(),
      percentData = {
        id: itemId,
        _method: 'put',
        purchase_process_trading_item: {
          reduction_rate_value: "0,00",
          reduction_rate_percent: "0,00",
          status:"closed"
        }
      };

    $.ajax({
      url: url + itemId,
      data: percentData,
      type: 'POST',
      dataType: 'json',
      success: function(data) {
        location.reload();
      },

      error: function(xhr) {
        var errors = $.parseJSON(xhr.responseText).errors;

        $trading.find('#reduction_rate_value').val('0,00')
        $trading.find('#reduction_rate_percent').val('0,00')

        processPersistErrors(errors);
      }
    });
  });

  $('button#undo_bid').on('click', function(event) {
    event.preventDefault();

    var itemId = $trading.find('#item_id').val(),
      dataDisabled = _($(this).attr('data-disabled'));

    if ( dataDisabled.isEmpty() && itemId) {
      undoLastBid(itemId);
    }
  });

  $trading.find('.item_chooser').on('change', function() {
    var itemId = $(this).closest('td').data('id');

    $trading.find('#item_id').val(itemId);


    getCreditors(itemId);
    updateBenefitedBidLink(itemId); /** VERIFICAR AQUI DEPOIS E VER A REGRA DE DESEMPATE **/
  });

  $trading.find('#errors_dialog').dialog({
    autoOpen: false,
    modal: true,
    resizable: false,
    width: 500
  });

  $trading.find('#close_error_dialog').on('click', function() {
    $('#errors_dialog').dialog('close');
  });
});
