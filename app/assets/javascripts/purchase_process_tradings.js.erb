$(document).ready(function() {
  const $trading = $("#tradings-fields");
  const $itemChecked = $trading.find('input.item_chooser:checked')

  $trading.find('input.item_chooser:first').attr('checked', true).trigger('change');

  function allowNewBid(allowed) {
    if (allowed) {
      $('button#make_bid').removeAttr('data-disabled');
      $('#amount').attr('disabled', false);
    } else {
      $('button#make_bid').attr('data-disabled', '');
      $('button#make_bid').data('disabled', "<%= I18n.t 'purchase_process_trading.messages.make_bid_disabled_message' %>");
      $('#amount').attr('disabled', true);
    }
  }

  function allowUndoBid(allowed) {
    if (allowed) {
      $('button#undo_bid').removeAttr('data-disabled');
    } else {
      $('button#undo_bid').attr('data-disabled', '');
      $('button#undo_bid').data('disabled', "<%= I18n.t 'purchase_process_trading.messages.undo_bid_disabled_message' %>");
    }
  }

  function updateBenefitedBidLink(itemId) {
    var url = $('a#benefited_bid').data('url');

    url += '?' + $.param({item_id: itemId});

    $('a#benefited_bid').attr('href', url);
  }

  function allowBenefitedBid(historic, lowest_bid, next_bid) {
    var message = null;

    if (_.isEmpty(historic) || !_.isEmpty(next_bid)) {
      message = "<%= I18n.t 'purchase_process_trading_item.messages.trading_item_not_finished' %>";
    } else if (lowest_bid.creditor_benefited) {
      message = "<%= I18n.t 'purchase_process_trading_item.messages.lowest_proposal_already_benefited' %>";
    }

    if (message) {
      $('a#benefited_bid').attr('data-disabled', '');
      $('a#benefited_bid').data('disabled', message);
    } else {
      $('a#benefited_bid').removeAttr('data-disabled');
    }
  }

  function fillForm(bid) {
    $trading.find('#amount').val('0,00');

    if (_.isEmpty(bid)) {
      $trading.find('#bid_id').val('');
      $trading.find('#accreditation_creditor').val('');
      $trading.find('#accreditation_creditor_id').val('');
      $trading.find('#lot').val('');
      $trading.find('#round').val('');

      allowNewBid(false);
    } else {
      $trading.find('#bid_id').val(bid.id);
      $trading.find('#accreditation_creditor').val(bid.accreditation_creditor);
      $trading.find('#accreditation_creditor_id').val(bid.accreditation_creditor_id);
      $trading.find('#lot').val(bid.lot);
      $trading.find('#round').val(bid.round);
      $trading.find('#amount').val(bid.amount_with_reduction);

      allowNewBid(true);
    }
  }

  function fillLowestBid(lowest_bid) {
    var bidAmount = $itemChecked.closest('tr').find('td.bid_amount'),
        bidCreditor = $itemChecked.closest('tr').find('td.bid_creditor');

    if ( _.isEmpty(lowest_bid) ) {
      lowest_bid.amount = '-';
      lowest_bid.creditor = '-';
    }

    bidCreditor.text(lowest_bid.creditor);
    bidAmount.text(lowest_bid.amount);
  }

  function fillItem(item) {
    var status = $itemChecked.closest('tr').find('td.status');

    fillLowestBid(item.lowest_bid);

    status.text(item.status);

    $trading.find('#reduction_rate_value').val(item.reduction_rate_value);
    $trading.find('#reduction_rate_percent').val(item.reduction_rate_percent);
  }

  function getNextBidFromServer() {
    var itemId = $trading.find('#item_id').val(),
        oldUrl = $trading.find('#next_bid_url').val(),
        newUrl = oldUrl.replace(/\/\d+\//, '/' + itemId + '/');

    $.ajax({
      url: newUrl,
      cache: false,
      dataType: 'json',
      success: function(item) {
        fillForm(item.next_bid);
        fillHistoric(item.historic);
        fillItem(item)
        allowBenefitedBid(item.historic, item.lowest_bid, item.next_bid);
      }
    });
  }

  function processPersistErrors(errors) {
    var template     = $trading.find('#error_template'),
        error_dialog = $trading.find('#errors_dialog'),
        target       = error_dialog.find('#errors_content');

    target.empty();

    _.each(errors, function(error) {
      target.append( template.mustache({ error: error }) );
    });


    error_dialog.dialog('open');
  }

  function addBidToHistoric(bid, append) {
    var target   = $('table#historic tbody'),
        template = $('#historic_template'),
        content  = template.mustache(bid);

    if (append) {
      target.append( content );
    } else {
      target.prepend( content );
    }
  }

  function fillHistoric(historic) {
    $('table#historic tbody').empty();

    if ( _.isEmpty(historic) ) {
      allowUndoBid(false);
    } else {
      allowUndoBid(true);
    }

    _.each(historic, function(bid) {
      addBidToHistoric(bid, true);
    });
  }

  function persistBid(bidId) {
    var url = $('#persist_bid_url').val(),
        currentBid = {
          id: bidId,
          _method: 'put',
          purchase_process_trading_item_bid: {
            amount: $trading.find('#amount').val()
          }
        };

    $.ajax({
      url: url + bidId,
      data: currentBid,
      dataType: 'json',
      type: 'POST',
      success: function() {
        getNextBidFromServer();
        allowUndoBid(true);
      },
      error: function(xhr) {
        var errors = $.parseJSON(xhr.responseText).errors;

        processPersistErrors(errors);
      }
    });
  }

  function fillCreditors(creditors) {
    var target = $trading.find('table#accreditation_creditors tbody'),
        template = $trading.find('#accreditation_creditors_template');

    target.empty();

    _.each(creditors, function(creditor) {
      target.append( template.mustache(creditor));
    });
  }

  function getCreditors(itemId) {
    var oldUrl = $('#creditor_list').val(),
        newUrl = oldUrl.replace(/\/\d+\//, '/' + itemId + '/');

    $.ajax({
      url: newUrl,
      cache: false,
      dataType: 'json',
      type: 'GET',
      success: function(creditors) {
        fillCreditors(creditors);
      }
    });
  }

  function undoLastBid(itemId) {
    var oldUrl = $('#undo_last_bid_url').val(),
        newUrl = oldUrl.replace(/\/\d+\//, '/' + itemId + '/');

    $.ajax({
      url: newUrl,
      dataType: 'json',
      type: 'POST',
      success: function(data) {
        fillForm(data.next_bid);
        fillHistoric(data.historic);
        fillLowestBid(data.lowest_bid);

        allowNewBid(!_.isEmpty(data.next_bid));
        allowBenefitedBid(data.historic, data.lowest_bid, data.next_bid);
      }
    });
  }

  function submitReductions(itemId) {
    var url = $trading.find('#persist_item_url').val(),
        percentData = {
          id: itemId,
          _method: 'put',
          purchase_process_trading_item: {
            reduction_rate_value: $trading.find('#reduction_rate_value').val(),
            reduction_rate_percent: $trading.find('#reduction_rate_percent').val()
          }
        };

    $.ajax({
      url: url + itemId,
      data: percentData,
      type: 'POST',
      dataType: 'json',
      success: function(data) {
        fillForm(data.next_bid);
      },

      error: function(xhr) {
        var errors = $.parseJSON(xhr.responseText).errors;

        $trading.find('#reduction_rate_value').val('0,00'),
        $trading.find('#reduction_rate_percent').val('0,00')

        processPersistErrors(errors);
      }
    });
  }

  $('button#reduction_button').on('click', function(event) {
    event.preventDefault();

    var itemId = $trading.find('#item_id').val();

    submitReductions(itemId);
  });

  $('button#make_bid').on('click', function(event) {
    event.preventDefault();
debugger
    var bidId = $('#bid_id').val(),
        dataDisabled = _($(this).attr('data-disabled'));

    if ( dataDisabled.isEmpty() && bidId) {
      persistBid(bidId);
    }
  });

  $("button#finish_bid").on('click', function(event) {
    event.preventDefault();
    var itemId = $itemChecked.parent().attr('data-id');

    var url = $trading.find('#persist_item_url').val(),
        percentData = {
          id: itemId,
          _method: 'put',
          purchase_process_trading_item: {
            reduction_rate_value: "0,00",
            reduction_rate_percent: "0,00",
            status:"closed"
          }
        };

    $.ajax({
      url: url + itemId,
      data: percentData,
      type: 'POST',
      dataType: 'json',
      success: function(data) {
        location.reload();
      },

      error: function(xhr) {
        var errors = $.parseJSON(xhr.responseText).errors;

        $trading.find('#reduction_rate_value').val('0,00')
        $trading.find('#reduction_rate_percent').val('0,00')

        processPersistErrors(errors);
      }
    });

  });

  $('button#undo_bid').on('click', function(event) {
    event.preventDefault();

    var itemId = $trading.find('#item_id').val(),
        dataDisabled = _($(this).attr('data-disabled'));

    if ( dataDisabled.isEmpty() && itemId) {
      undoLastBid(itemId);
    }
  });

  $trading.find('.item_chooser').on('change', function() {
    var itemId = $(this).closest('td').data('id');
    debugger

    $trading.find('#item_id').val(itemId);

    getNextBidFromServer();
    getCreditors(itemId);
    updateBenefitedBidLink(itemId);
  });

  $trading.find('#errors_dialog').dialog({
    autoOpen: false,
    modal: true,
    resizable: false,
    width: 500
  });

  $trading.find('#close_error_dialog').on('click', function() {
    $('#errors_dialog').dialog('close');
  });
});
