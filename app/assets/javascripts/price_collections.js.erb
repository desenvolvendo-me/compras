$(document).ready(function () {

    function hasPurchaseSolicitationAlreadyAdded(purchase_solicitation) {
        var added = false;
        $("table#list_purchase_solicitations_records input.purchase_solicitation_id").each(function () {
            if ($(this).val() == purchase_solicitation.id) {
                added = true;
                return added;
            }
        });
        return added;
    }

    function mergePurchaseSolicitation(purchase_solicitation) {

        var record = $('tr#purchase_solicitation-id-' + purchase_solicitation.id);

        record.find("td.code_and_year").text("0,00");
        record.find('input.code_and_year').val("0,00");

        record.find("td.budget_structure").text("0,00");
        record.find('input.budget_structure').val("0,00");

    }

    function renderPurchaseSolicitation(purchase_solicitation) {
        var purchaseSolicitationBinds = {
            uuid: _.uniqueId('fresh-'),
            id: '',
            code_and_year: purchase_solicitation.code + "/" + purchase_solicitation.accounting_year,
            department: purchase_solicitation.department.description,
            user: purchase_solicitation.user.name
        };

        var data = $('#price_collection_purchase_solicitations_template').mustache(purchaseSolicitationBinds);

        $('#table_price_collection_purchase_solicitations_records tbody').append(data).trigger("nestedGrid:afterAdd");

    }

    function hasItemAlreadyAdded(item) {
        var added = false;

        $("#price_collection_items_records input.material_id").each(function () {
            if ($(this).val() == item.material_id) {
                added = true;
                return added;
            }
        });

        return added;
    }

    function renderItem(item) {
        var itemBinds = {
            uuid: _.uniqueId('fresh-'),
            id: '',
            material_id: item.material_id,
            material: item.material_description,
            reference_unit: item.reference_unit,
            brand: item.brand,
            quantity: numberWithDelimiter(item.quantity),
            lot: item.lot
        };

        var data = $('#price_collection_items_template').mustache(itemBinds);

        $('#price_collection_items_records tbody').append(data).trigger("nestedGrid:afterAdd");
    }

    function mergeItem(item) {
        var material = $('#price_collection_items_records input.material_id[value="' + item.material_id + '"]'),
            record = material.closest('.nested-record'),
            itemQuantity = new BigNumber(parsePtBrFloat(record.find('input.quantity').val())),
            totalQuantity = numberWithDelimiter(parseFloat(itemQuantity.add(item.quantity)));

        record.find('input.quantity').val(totalQuantity);
        record.find('td.quantity').text(totalQuantity);
    }

    $('form.price_collection').on('change', '.material', function (event, material) {
        if (material) {
            $(this).closest('.item').find('.reference-unit').val(material.reference_unit);
        }
    });

    $('#price_collection_material_id').on('change', function (event, material) {
        $('#price_collection_reference_unit').val('');

        if (material) {
            $('#price_collection_reference_unit').val(material.reference_unit);
        }
    });

    $("#price_collection_proposals").on('change',"[name$='[creditor_id]']", function (event, creditor) {
        if (creditor) {
          var $email = $("#price_collection_proposals [name$='[email]']");

          $email.val(creditor.email || creditor.person_email);

          if (creditor.email) {
            $email.attr('readonly', true);
          }
        }
    });

    $("#price_collection_purchase_solicitations_id").on("change", function (event, purchaseSolicitation) {

        if (!purchaseSolicitation) {
            purchaseSolicitation = {};
        }

        $.each(purchaseSolicitation.items, function (i, item) {
            if (hasItemAlreadyAdded(item)) {
                mergeItem(item);
            } else {
                renderItem(item);
            }
        });
    });

    $("#price_collection_demand_id").on("change", function (event, demand) {

        if (!demand) {
            demand = {};
        }

        $.each(demand.purchaseSolicitations, function (i, purchaseSolicitation) {

            if (!purchaseSolicitation) {
                purchaseSolicitation = {};
            }

            $.each(purchaseSolicitation.items, function (i, item) {
                if (hasItemAlreadyAdded(item)) {
                    mergeItem(item);
                } else {
                    renderItem(item);
                }
            });
        });

    });

    $("#price_collection_demand_id").on("change", function (event, Demand) {

        $.ajax({
            url: Routes.demands_api_show,
            data: {demand_id: Demand.id},
            dataType: 'json',
            type: 'POST',
            success: function (data) {
                $.each(data.purchase_solicitations, function (i, purchase_solicitation) {
                    if (hasPurchaseSolicitationAlreadyAdded(purchase_solicitation)) {
                        mergePurchaseSolicitation(purchase_solicitation);
                    } else {
                        renderPurchaseSolicitation(purchase_solicitation);
                    }
                });
            }
        });

    });

  $("#cancel-proposal").click(function(){
    $("#proposals-records, #add-proposal").show();
    $(this).hide();
    $("#proposal-fields").html('');
  });

  $("#add-proposal").click(function() {
    $('#proposal-fields').append($('#proposals-template').mustache());
    showProprosal();
  });

  $(".edit-proposal").click(function() {
    var url = $(this).data('url');

    $.get(url, function (data) {
      $("#proposal-fields").html($(data).html());
      showProprosal();
    })
  });
});

function showProprosal(){
  $(".tabs").tabs();
  $("#proposals-records, #add-proposal").hide();
  $("#cancel-proposal").show();
}
